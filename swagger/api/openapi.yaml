openapi: 3.0.0
info:
  title: Rent-A-Ride
  version: 1.0.0
servers:
- url: "http://{{url}}"
tags:
- name: Aunthentication
- name: RentalCarProvider
- name: Cars
- name: Promotion
- name: comment
- name: Booking
paths:
  /api/v1/auth/register:
    post:
      tags:
      - Aunthentication
      summary: REG Provider
      operationId: apiV1AuthRegisterPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Provider_test99999
                telephoneNumber: "0999999999"
                email: provider_test999@gmail.com
                role: provider
                password: "12345678"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Aunthentication
  /api/v1/auth/login:
    post:
      tags:
      - Aunthentication
      summary: LOGIN Provider
      operationId: apiV1AuthLoginPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: provider_test999@gmail.com
                password: "12345678"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Aunthentication
  /api/v1/auth/me:
    get:
      tags:
      - Aunthentication
      summary: GET ME
      operationId: apiV1AuthMeGET
      parameters:
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YjdlZjliMDQxOWJiZjEyNDMyNDUzNiIsImlhdCI6MTc0MDEwODY2OCwiZXhwIjoxNzQyNzAwNjY4fQ.KHEZxBxOfw88KOAQ6uThoi28OYmJWlwZ5MsMcbwZCqk
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Aunthentication
  /api/v1/auth/logout:
    get:
      tags:
      - Aunthentication
      summary: LOGOUT
      operationId: apiV1AuthLogoutGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Aunthentication
  /api/v1/rentalcarproviders:
    get:
      tags:
      - RentalCarProvider
      summary: GET ALL RCP
      operationId: apiV1RentalcarprovidersGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: RentalCarProvider
    post:
      tags:
      - RentalCarProvider
      summary: CREATE RCP
      operationId: apiV1RentalcarprovidersPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: "{{$randomCompanyName}}"
                address: "{{$randomStreetAddress}}"
                district: "{{$randomStreetName}}"
                province: Dumb
                postalcode: "10000"
                tel: 02-1234567
                region: Bangkok
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: RentalCarProvider
  /api/v1/rentalcarproviders/67f8e8541b091b99e53c64dd:
    get:
      tags:
      - RentalCarProvider
      summary: GET SINGLE RCP
      description: Get specific ID info
      operationId: apiV1Rentalcarproviders67f8e8541b091b99e53c64ddGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: RentalCarProvider
    put:
      tags:
      - RentalCarProvider
      summary: UPDATE RCP
      operationId: apiV1Rentalcarproviders67f8e8541b091b99e53c64ddPUT
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Test Update name
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: RentalCarProvider
    delete:
      tags:
      - RentalCarProvider
      summary: DELETE RCP
      operationId: apiV1Rentalcarproviders67f8e8541b091b99e53c64ddDELETE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: RentalCarProvider
  /api/v1/cars/67f0a5caa7d95b786071302e:
    post:
      tags:
      - Cars
      summary: CREATE Car to Rcp
      operationId: apiV1Cars67f0a5caa7d95b786071302ePOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: Testcar1 9s pro
                model: dumb
                type: SUV
                topSpeed: 30
                fuelType: Electric
                seatingCapacity: 2
                year: 2023
                pricePerDay: 8000
                carDescription: Test dummy.
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Cars
  /api/v1/cars:
    get:
      tags:
      - Cars
      summary: GET ALL Car
      operationId: apiV1CarsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Cars
  /api/v1/cars/67f8e466b5fb87483342b7e0:
    get:
      tags:
      - Cars
      summary: GET SINGLE Car
      operationId: apiV1Cars67f8e466b5fb87483342b7e0GET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Cars
    put:
      tags:
      - Cars
      summary: Update Car
      operationId: apiV1Cars67f8e466b5fb87483342b7e0PUT
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: TestUpdateCar
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Cars
    delete:
      tags:
      - Cars
      summary: DELETE Car
      operationId: apiV1Cars67f8e466b5fb87483342b7e0DELETE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Cars
  /api/v1/rentalcarproviders/67f927fced912f44869c20cd/cars:
    get:
      tags:
      - Cars
      summary: Get Cars for Rcp
      operationId: apiV1Rentalcarproviders67f927fced912f44869c20cdCarsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Cars
  /api/v1/promotions:
    get:
      tags:
      - Promotion
      summary: GET ALL Promotion
      operationId: apiV1PromotionsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Promotion
    post:
      tags:
      - Promotion
      summary: CREATE Promotion
      operationId: apiV1PromotionsPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: New User Welcome Promo 2
                description: Exclusive 20% off for first-time users.
                discountPercentage: 20
                maxDiscountAmount: 700
                minPurchaseAmount: 0
                startDate: 2025-04-01T00:00:00.000Z
                endDate: 2025-12-31T23:59:59.000Z
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Promotion
  /api/v1/promotions/67f8e533b5fb87483342b804:
    get:
      tags:
      - Promotion
      summary: GET SINGLE Promotion
      operationId: apiV1Promotions67f8e533b5fb87483342b804GET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Promotion
  /api/v1/rentalcarproviders/67f8e98e1b091b99e53c6516/promotions:
    get:
      tags:
      - Promotion
      summary: GET ALL Provider Promotion
      operationId: apiV1Rentalcarproviders67f8e98e1b091b99e53c6516PromotionsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Promotion
  /api/v1/promotions/67f8ea6c1b091b99e53c655b:
    put:
      tags:
      - Promotion
      summary: UPDATE Promotion
      operationId: apiV1Promotions67f8ea6c1b091b99e53c655bPUT
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: test update promotions
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Promotion
    delete:
      tags:
      - Promotion
      summary: DELETE Promotion
      operationId: apiV1Promotions67f8ea6c1b091b99e53c655bDELETE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Promotion
  /api/v1/comments/:
    post:
      tags:
      - comment
      summary: add comment with body
      operationId: apiV1CommentsPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: Test Api1
                car: 67f2980e4c0c4285bd72b773
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Comment
  /api/v1/cars/67f2980e4c0c4285bd72b773/comments/:
    get:
      tags:
      - comment
      summary: get comment with carID
      operationId: apiV1Cars67f2980e4c0c4285bd72b773CommentsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Comment
    post:
      tags:
      - comment
      summary: add comment params
      operationId: apiV1Cars67f2980e4c0c4285bd72b773CommentsPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: Add Comment With params
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Comment
  /api/v1/comments/67f8a780b5fb87483342b79c:
    put:
      tags:
      - comment
      summary: update comment
      operationId: apiV1Comments67f8a780b5fb87483342b79cPUT
      parameters:
      - name: Content-Type
        in: header
        description: JSON
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: Test Update Comment
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Comment
  /api/v1/comments/67f8a7adb5fb87483342b7b2:
    delete:
      tags:
      - comment
      summary: delete comment
      operationId: apiV1Comments67f8a7adb5fb87483342b7b2DELETE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Comment
  /api/v1/bookings:
    get:
      tags:
      - Booking
      summary: GET ALL Booking
      operationId: apiV1BookingsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
  /api/v1/cars/67f90726269b0ab62543f465/bookings:
    get:
      tags:
      - Booking
      summary: GET Booking for Provider
      operationId: apiV1Cars67f90726269b0ab62543f465BookingsGET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
  /api/v1/bookings/67f14494e70b3cbd3c397681:
    get:
      tags:
      - Booking
      summary: GET ONE bookings
      operationId: apiV1Bookings67f14494e70b3cbd3c397681GET
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
    put:
      tags:
      - Booking
      summary: UPDATE Bookings
      operationId: apiV1Bookings67f14494e70b3cbd3c397681PUT
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: 2022-01-02T17:00:00.000Z
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
  /api/v1/cars/67f94e688ff882c757a34f6d/bookings:
    post:
      tags:
      - Booking
      summary: CREATE Booking
      operationId: apiV1Cars67f94e688ff882c757a34f6dBookingsPOST
      parameters:
      - name: Content-Type
        in: header
        description: JSON Type
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: 2023-01-02T17:00:00.00Z
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
  /api/v1/bookings/67f91c1a7d177a0aa45ff4fb:
    delete:
      tags:
      - Booking
      summary: DELETE Bookings
      operationId: apiV1Bookings67f91c1a7d177a0aa45ff4fbDELETE
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
      x-swagger-router-controller: Booking
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
